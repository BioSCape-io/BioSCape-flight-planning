{"title":"BioSCape Project Overview","markdown":{"yaml":{"title":"BioSCape Project Overview","format":"html","editor":"source"},"headingText":"packages","containsRefs":false,"markdown":"\n\n```{r setup, message=F, echo=F, warning=F, output=F,cache=F, include=F}\n\nlibrary(quarto)\nlibrary(knitr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(sf)\nlibrary(reactable)\n\n\n# Run workflow\nif (Sys.getenv(\"USER\") != \"adamw\") {\n  source(\"Update_Priorities.R\",local = knitr::knit_global())\n  }\n\nif (Sys.getenv(\"USER\") == \"adamw\") {\n  load(\"data/report_data.Rdata\")\n}\n\n```\n\n\n## Schedule\n\n\n```{r linedates, echo=F}\n\nlinedates <- lines %>% \n  dplyr::filter(!is.na(date)) %>% \n  group_by(aircraft) %>% \n  st_set_geometry(NULL) %>% \n  mutate(date=as_date(as.character(date),format=\"%Y%m%d\")) %>% \n  summarize(flight_dates=paste0(sort(unique(format(date,\"%b%d\"))),collapse=\", \"),\n              flight_days=sum(!is.na(unique(date))))\n\ndtime=data.frame(\n  aircraft=c(\"G5\",\"G3\"),\n  start_date=c(as_date(c(\"2023-10-20\",\"2023-10-22\"))),\n  stop_date=c(as_date(c(\"2023-11-15\",\"2023-11-26\")))) %>% \n  left_join(linedates,by=\"aircraft\") %>% \n  mutate(science_days_total = stop_date - start_date ,\n           science_days_used=today()-start_date+1,\n         total_days_remaining=stop_date-today(),\n         approx_science_days_remaining=floor(total_days_remaining-(total_days_remaining/8)))\n\ndtime %>% t() %>% kable()\n\n```\n\n# Project Level Completion\n\nThe following summaries have a few caveats:\n\n* Priorities constructed by intersecting _approximate_ swath widths with PI ROIs\n\n\n\n```{r box_summary, echo=F, warning=F, message=F}\nbox_summary %>% \n  # st_set_geometry(NULL) %>% \n   group_by(instrument) %>% \n   summarize(proportion=mean(line_proportion,na.rm=T)) %>% \n    mutate(proportion=round(proportion,1)) %>% \n    spread(instrument,proportion) %>% \n    kable()\n```\n\n# Box Priorities\n\n## GIII\n```{r echo=F, message=F}\npartial_lines <-\n  lines %>% \n  group_by(aircraft,instrument,box) %>% \n  summarize(any=any(!is.na(status)),\n            none=!any(!is.na(status))) %>% \n  st_set_geometry(NULL)         \n\nbox_line_summary<-\n  line_summary %>%\n  pivot_wider(id_cols=c(\"box\",\"target\"),names_from = \"instrument\",\n              values_from = \"line_proportion\",\n              names_prefix = \"% \")\n\n\nbox_summary %>%\n  filter(aircraft==\"G3\") %>% \n  select(box, instrument, aircraft,\n         updated_rank = priority_updated_rank, original_rank=priority_original_rank, line_proportion) %>% \n  pivot_wider(id_cols=c(box,aircraft),\n              names_from = instrument,values_from = c(updated_rank,original_rank)) %>% \n  left_join(box_line_summary,by=\"box\") %>%\n  arrange(updated_rank_avirisng) %>%\n  kable()\n\n  # reactable(defaultPageSize=24,\n  #           columns = \n  #             list(\n  # \"% avirisng\" = colDef(format = colFormat(digits=0)),\n  #   \"% prism\" = colDef(format = colFormat(digits=0)),\n  #   \"% hytes\" = colDef(format = colFormat(digits=0)),\n  #   \"% lvis\" = colDef(format = colFormat(digits=0))))\n# \n# \n# line_summary %>% ungroup()%>%\n# #  mutate(summary=paste0(line_proportion,\"% (\",\n# #                        nlines_acquired,\"/\",\n# #                        nlines_total, \")\")) %>% \n#   pivot_wider(id_cols=c('box', 'target'),\n#               names_from = 'aircraft', values_from = c('line_proportion','nlines_total','nlines_acquired')) %>% \n#   arrange(desc(line_proportion_G3),nlines_total_G3) %>% \n#    reactable(defaultPageSize=25)\n# \n\n\n\n```\n\n## GV\n```{r, echo=F}\nbox_summary %>%\n  filter(aircraft==\"G5\") %>% \n  select(box, instrument, aircraft,\n         updated_rank = priority_updated_rank, original_rank=priority_original_rank, line_proportion) %>% \n  pivot_wider(id_cols=c(box,aircraft),\n              names_from = instrument,values_from = c(updated_rank,original_rank)) %>% \n  left_join(box_line_summary,by=\"box\") %>%\n  arrange(updated_rank_lvis) %>%\n  reactable(defaultPageSize=24,\n            columns = \n              list(\n  \"% avirisng\" = colDef(format = colFormat(digits=0)),\n    \"% prism\" = colDef(format = colFormat(digits=0)),\n    \"% hytes\" = colDef(format = colFormat(digits=0)),\n    \"% lvis\" = colDef(format = colFormat(digits=0))))\n\n```\n\n\n```{r line_summary, warning=F, echo=F}\n\n# Line completion summary\n# line_summary %>% ungroup()%>%\n# #  mutate(summary=paste0(line_proportion,\"% (\",\n# #                        nlines_acquired,\"/\",\n# #                        nlines_total, \")\")) %>% \n#   pivot_wider(id_cols=c('box', 'target'),\n#               names_from = 'aircraft', values_from = c('line_proportion','nlines_total','nlines_acquired')) %>% \n#   arrange(desc(line_proportion_G3),nlines_total_G3) %>% \n#    reactable(defaultPageSize=25)\n\n\n# box_summary %>% \n#   ggplot(aes(x=box))+\n#   geom_bar(aes(y=nlines_total),stat=\"identity\",col=grey(0.9))+\n#   geom_bar(aes(y=nlines_flown),stat=\"identity\",fill=\"yellow\")+\n#   geom_bar(aes(y=nlines_acquired),stat=\"identity\",fill=\"darkgreen\")+\n#   facet_wrap(~instrument,drop = T,nrow=1)+\n#   coord_flip()+\n#   xlab(\"Flight Box\")+\n#   ylab(\"Flight Lines Completed\")\n#   \n\n```\n\n\n# Line Priorities\n\n## GIII\n\n```{r, warning=F, echo=F}\n\nswath_summary %>% \n  distinct() %>% \n  ungroup() %>% \n  filter(aircraft==\"G3\") %>% \n  mutate(priority_rank=rank(desc(priority_updated))) %>% \n  select(box, aircraft,target, instrument, line, priority_rank) %>% \n  pivot_wider(id_cols=c(box,line,target),\n              names_from = instrument,values_from = c(priority_rank)) %>% \n  arrange(avirisng) %>% \n  reactable(defaultPageSize=10, filterable = TRUE)\n```\n\n## GV\n\n```{r, warning=F, echo=F}\n\nswath_summary %>% \n  distinct() %>% \n  ungroup() %>% \n  filter(aircraft==\"G5\") %>% \n  mutate(priority_rank=rank(desc(priority_updated))) %>% \n  select(box, target, instrument, line, priority_rank) %>% \n    pivot_wider(id_cols=c(box,line,target),\n              names_from = \"instrument\",values_from = c(priority_rank)) %>% \n  arrange(lvis) %>% \n  reactable(defaultPageSize=10, filterable = TRUE)\n```\n\n\n## \n\n```{r, eval=F, echo=F, fig.height=3}\n#Lines flown per day\nlines %>% \n  filter(!is.na(date),!is.na(status)) %>%\n#  st_set_geometry(NULL) %>% \n  group_by(date,instrument) %>% \n  summarize(nlines=n()) %>% \n  mutate(date=as_date(as.character(date),format=\"%Y%m%d\")) %>%\n  ggplot(aes(x=date,y=nlines,col=instrument,group=instrument))+\n  geom_line()+\n  ylab(\"Lines Flown\")+\n  xlab(\"Date\")\n\n```\n\n\n\n\n```{r, eval=F, echo=F}\n\nggplot(bioscape_summary,aes(x=instrument))+\n   geom_bar(aes(y=proportion),stat=\"identity\")+\n   coord_flip()\n\n```\n\n```{r, eval=F, echo=F, message=F}\n\n\n## calculate area-based priority index by box ### ADD PRIORITY HERE?\nbox_priority_area <- areas_pi_flightbox %>% \n  mutate(pi_area_in_box = polygon_area/pi_total_area) %>% \n  mutate(pi_area_priority = pi_area_in_box * area_remaining)  %>% #View() #you are penalised if you already have an acquisition\n  group_by(box_nr) %>% \n  summarize(area_based_box_priority = sum(pi_area_priority)) \n  \n## pull in a cloud risk value for each box \nbox_priority_cloud <- st_set_geometry(boxes,NULL) #remove geometry from boxes, coerce to dataframe\nbox_priority_cloud <- box_priority_cloud [, c(\"box_nr\", \"cloudmean\")] # pull out box_nr and cloud mean\n\n## add in cloud values and calculate new combined priority metric\nbox_priority_area_cloud <- box_priority_area %>% \n  left_join(box_priority_cloud, by=\"box_nr\") %>%\n  mutate(cloudscale=cloudmean) %>% \n  mutate(across(cloudscale, function(x){scales::rescale(cloudmean,c(20,100))})) %>% #change to adjust strength of cloud\n  mutate (priority_area_cloud = (cloudscale) * area_based_box_priority) # make cloud percentage into a proportion, then multiply by area based priority score \n\n#print(box_priority_area_cloud, n=100) \n\n## Sort and export\npsheet=\"https://docs.google.com/spreadsheets/d/1D4Xba_yucp1o9eHkRmvrHdxQgRG4HbHVOu9U8ajDIY8/edit#gid=0\" #separate sheet\n#psheet=\"https://docs.google.com/spreadsheets/d/1x_mmDL6JhNivV-Mk5HOFGxodkphaYjVicXkB4k8j9tE\" #combined data sheet\n\n\ntoday=lubridate::today() #set sheet name\n\nbox_priority_area_cloud %>% \n  arrange(desc(area_based_box_priority)) %>%\n  st_set_geometry(NULL) %>%\n  select(-cloudscale) %>% \n  mutate(across(area_based_box_priority, function(x){round(as.numeric(x/sum(area_based_box_priority)*100))})) %>%\n  mutate(across(cloudmean, round)) %>%\n  mutate(across(priority_area_cloud, function(x){round(as.numeric(x/max(priority_area_cloud)*100))})) %>%\n  arrange(desc(priority_area_cloud))%>%\n  left_join(st_set_geometry(boxes,NULL),c(\"box_nr\")) %>% \n  mutate(\n    # !!paste0(format(lubridate::ymd(today+1), \"%b%d\"),\"_G3\"):=\"\",\n    # !!paste0(format(lubridate::ymd(today+1), \"%b%d\"),\"_G5\"):=\"\",\n    # !!paste0(format(lubridate::ymd(today+2), \"%b%d\"),\"_G3\"):=\"\",\n    # !!paste0(format(lubridate::ymd(today+2), \"%b%d\"),\"_G5\"):=\"\",\n    # !!paste0(format(lubridate::ymd(today+3), \"%b%d\"),\"_G3\"):=\"\",\n    # !!paste0(format(lubridate::ymd(today+3), \"%b%d\"),\"_G5\"):=\"\",\n    # !!paste0(format(lubridate::ymd(today+4), \"%b%d\"),\"_G3\"):=\"\",\n    # !!paste0(format(lubridate::ymd(today+4), \"%b%d\"),\"_G5\"):=\"\",\n  ) %>% \n  select(starts_with(\"Oct\"),starts_with(\"Nov\"),box_nr,target,\n         priority=priority_area_cloud,priority_cloud=cloudmean.x,priority_team=area_based_box_priority,Sync,\n         AVIRIS,PRISM,HyTES,LVIS,PIs) %>% \n  write_sheet(ss = psheet,\n              sheet = as.character(today))\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.475","title":"BioSCape Project Overview","editor":"source"},"extensions":{"book":{"multiFile":true}}}}}